plugins {
	id 'scala'
	alias(libs.plugins.quilt.loom)
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group


// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft(libs.minecraft)
	mappings loom.layered {
		addLayer quiltMappings.mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:v2")
		// officialMojangMappings() // Uncomment if you want to use Mojang mappings as your primary mappings, falling back on QM for parameters and Javadocs
	}
	modImplementation libs.quilt.loader

	// Scala 3 libs
	include("org.scala-lang:scala3-library_3:3.1.2")
	api("org.scala-lang:scala3-library_3:3.1.2")
	// Depended on by scala3
	include("org.scala-lang:scala-library:2.13.8")
	api("org.scala-lang:scala-library:2.13.8")

}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(ScalaCompile).configureEach {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}
